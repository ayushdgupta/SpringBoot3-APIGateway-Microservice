server:
  port: 9093

spring:
  main:
    web-application-type: reactive
  application:
    name: API-Gateway
  cloud:
    gateway:
      routes:
        - id: User-Service
          uri: lb://User-Service              # Here 'lb' is load-balancer
          predicates:                         #  we will hit this path from the client side then API Gateway
            - Path=/user/**                   # will automatically configure the request to user-service.
        - id: Hotel-Service                   # url we will hit - http://localhost:9093/user/userWithRatingsUsingFeign/2
          uri: lb://Hotel-Service              # Here 'lb' is load-balancer
          predicates:
            - Path=/hotel/**
        - id: Rating-Service
          uri: lb://Rating-Service              # Here 'lb' is load-balancer
          predicates:                           # if we have multiple controllers in one microservice i.e. multiple
            - Path=/rating/**                   # API exposed then we can define the paths in below manner -
                                                # - Path=/rating/**,/staffs/**

  config:                                       # this propes is used to connect to the config-server
    import: optional:configserver:http://localhost:9094
#    import: optional:configserver:http://Config-Server

# Below props are configured in config-files which can be fetched using config-server.
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:                                    # this property will tell our microservice ki kis server ke
#      defaultZone: http://localhost:8761/eureka     # paas jake register hona hai.


# Spring boot security using Okta
okta:
  oauth2:
    issuer: ${issuerKey}
    audience: ${audienceKey}
    client-id: ${clientIdKey}
    client-secret: ${clientSecretKey}
    scopes: openid, profile, email, offline_access